# AWS Account and Region Configuration
# Development AWS Account
DEV_AWS_ACCOUNT_ID=123456789012
DEV_AWS_REGION=ca-central-1

# Production AWS Account
PROD_AWS_ACCOUNT_ID=987654321098
PROD_AWS_REGION=ca-central-1

# Project Configuration
PROJECT_NAME=memevote
ENVIRONMENT=dev

# Domain Configuration
DOMAIN_NAME=gharbidev.com

# Development Environment Configuration
DEV_FRONTEND_SUBDOMAIN=dev-app
DEV_BACKEND_SUBDOMAIN=dev-api
DEV_ECS_TASK_CPU=256
DEV_ECS_TASK_MEMORY=512

# Production Environment Configuration
PROD_FRONTEND_SUBDOMAIN=app
PROD_BACKEND_SUBDOMAIN=api
PROD_ECS_TASK_CPU=512
PROD_ECS_TASK_MEMORY=1024

# Shared Database Configuration
DB_NAME=memevote
DB_USERNAME=admin

# Frontend Cache Policy
FRONTEND_DEFAULT_TTL_DAYS=1
FRONTEND_MAX_TTL_DAYS=365
FRONTEND_MIN_TTL_MINUTES=5

# Infrastructure Configuration
# Aurora Serverless v2 Configuration
# - Development: 0.5-1 ACU (Auto-scaling)
# - Production: 0.5-4 ACU (Auto-scaling)

# ECS Configuration
# - Development: Scale 0-1 instances
# - Production: Scale 0-1 instances
# - Request-based auto-scaling (10 requests/target triggers scale-up)

# Networking
# - Uses default VPC for cost optimization
# - Public subnets for Aurora and ECS (no NAT Gateway costs)

# Security
# - Database credentials managed by AWS Secrets Manager
# - Secret names: gharbidev-${ENVIRONMENT}-db-credentials
# - ECS tasks use IAM roles for AWS service access

# Cost Optimization
# - 99% of time (no traffic): ~$0.50-1.00/day
# - Aurora Serverless scales to zero when not in use
# - ECS scales to zero when no requests
# - CloudFront caching reduces backend requests

# Note: Database passwords are now managed automatically by AWS Secrets Manager
# No need to set DB_PASSWORD environment variables
